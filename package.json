{
  "name": "hose",
  "productName": "hose",
  "version": "0.2.5",
  "private": true,
  "main": "public/electron.js",
  "author": "Christopher Bendel",
  "description": "Stream Live Phish Music",
  "dependencies": {
    "browserify-css": "0.12.0",
    "classnames": "^2.2.5",
    "core-js": "^2.5.1",
    "electron-builder-lib": "^19.47.1",
    "electron-is-dev": "^0.3.0",
    "electron-platform": "^1.2.0",
    "electron-updater": "^2.16.3",
    "eslint-config-react-tools": "^1.0.10",
    "file-saver": "^1.3.3",
    "hellojs": "^1.16.1",
    "is-electron": "^2.1.0",
    "jszip": "^3.1.5",
    "jszip-utils": "0.0.2",
    "jwt-decode": "^2.2.0",
    "moment": "^2.22.0",
    "prop-types": "^15.6.0",
    "react": "^15.6.2",
    "react-audioplayer": "^0.3.1",
    "react-autosuggest": "^9.3.2",
    "react-dialog": "^1.0.2",
    "react-dom": "^15.6.2",
    "react-easy-state": "^4.1.2",
    "react-ionicons": "^2.0.3",
    "react-motion": "^0.4.0",
    "react-router": "^4.1.2",
    "react-router-dom": "^4.1.2",
    "react-scripts": "^1.0.11",
    "react-select": "^1.1.0",
    "react-spinkit": "^3.0.0",
    "react-tippy": "^1.2.2",
    "request": "^2.83.0"
  },
  "build": {
    "appId": "com.chrissbendel.hose",
    "mac": {
      "category": "public.app-category.music",
      "helperBundleId": "com.chrissbendel.hose",
      "icon": "build/hose.icns"
    },
    "win": {
      "publisherName": "Chris Bendel"
    },
    "files": [
      "build/**/*",
      "node_modules/**/*",
      "package.json",
      "hose.provisionprofile",
      "hose.icns"
    ],
    "directories": {
      "buildResources": "assets"
    },
    "publish": {
      "provider": "s3",
      "bucket": "hose"
    }
  },
  "scripts": {
    "start": "react-scripts start",
    "test": "react-scripts test --env=jsdom",
    "eject": "react-scripts eject",
    "publishaws": "npm run build && aws s3 sync build/ s3://hose.live",
    "electron": "electron .",
    "build": "react-scripts build",
    "pack": "build --em.main=build/electron.js",
    "release:mac": "yarn prerelease && build -m --em.main=build/electron.js --publish always",
    "release:win": "yarn prerelease && build -w --ia32 --x64 --em.main=build/electron.js --publish always",
    "prerelease": "yarn build",
    "postinstall": "electron-builder install-app-deps"
  },
  "devDependencies": {
    "electron": "^1.8.1",
    "electron-builder": "^19.47.1",
    "electron-packager": "^10.1.0",
    "electron-publisher-s3": "^19.47.0"
  }
}
